import Mathlib
/-! Question:
23. (Hilbert's Theorem 90 ) Let $K$ be a Galois extension of $F$ with cyclic finite dimensional generated by $\sigma$. Suppose $\alpha \in K$ has $\mathrm{N}_{K / F}(\alpha)=1$. Prove that $\alpha$ is of the form $\alpha=\frac{\beta}{\sigma \beta}$ for some nonzero $\beta \in K$. [By the linear independence of characters show there exists some $\theta \in K$ such that
\[
\beta=\theta+\alpha \sigma(\theta)+(\alpha \sigma \alpha) \sigma^{2}(\theta)+\cdots+\left(\alpha \sigma \alpha \ldots \sigma^{n-2} \alpha\right) \sigma^{n-1}(\theta)
\]
is nonzero. Compute $\frac{\beta}{\sigma \beta}$ using the fact that $\alpha$ has norm 1 to $F$.]
-/

namespace UnexploredExercise_1432

namespace Hilbert

open scoped nonZeroDivisors
open FiniteDimensional Finset BigOperators Submodule groupCohomology Submonoid

/-
We will now prove Hilbert's Theorem 90 : If $E / F$ is a cyclic extension with $[E: F]=n$
and Galois group $G=\left\{1, \sigma, \ldots, \sigma^{n-1}\right\}$ generated by $\sigma$,
and $x \in E$, then $N(x)=1$ only if there exists $y \in E$ such that $x=y / \sigma(y)$;
-/

-- K and L are fields, L is a finite dimensional K-algebra.
variable {K L : Type*} [Field K] [Field L] [Algebra K L] [FiniteDimensional K L]
-- σ is a K-automorphism of L.
variable {σ : L ≃ₐ[K] L}
-- hσ states that the Galois group is cyclic, generated by σ.
-- More precisely, every element in the Galois group is a power of σ.
(hσ : ∀ x, x ∈ Subgroup.zpowers σ)
-- η is an element in Lˣ (the multiplicative group of units of L).
variable {η : Lˣ}
-- hη is the hypothesis that the norm of η (from L to K) is 1.
(hη : Algebra.norm K η.1 = 1)

set_option quotPrecheck false
/-- φ maps an element τ = σⁿ from the cyclic group generated by σ to n mod (order of σ).
  It's the inverse of the canonical isomorphism from Fin (orderOf σ) to
  the subgroup generated by σ.-/
local notation \"φ\" => (finEquivZPowers _ (isOfFinOrder_of_finite σ)).symm

/--confirms that φ maps σⁿ to n mod (orderOf σ).-/
lemma hφ : ∀ (n : ℕ), φ ⟨σ ^ n, hσ _⟩ = n % (orderOf σ) := fun n ↦ by
  simpa [Fin.ext_iff] using finEquivZPowers_symm_apply _ (isOfFinOrder_of_finite σ) n

variable (η) in
/-- Definition of the 1-cocycle for Hilbert's Theorem 90.
  For τ = σᵏ, cocycle(τ) = η ⋅ σ(η) ⋅ σ²(η) ⋅ ... ⋅ σᵏ⁻¹(η).-/
noncomputable
def cocycle : (L ≃ₐ[K] L) → Lˣ := fun τ ↦ ∏ i ∈ range (φ ⟨τ, hσ τ⟩), Units.map (σ ^ i) η

include hσ hη in
/--If `a` is a multiple of the order of σ (denoted `n`),
  then the product $\prod_{i=0}^{a-1} \sigma^i(\eta) = 1$.
  This is because $\prod_{i=0}^{a-1} \sigma^i(\eta) = (N_{L/K}(\eta))^{a/n} = 1^{a/n} = 1$.-/
lemma aux1 [IsGalois K L] {a: ℕ} (h : a % orderOf σ = 0) : ∏ i ∈ range a, (σ ^ i) η = 1 := by
  -- `h` implies `a` is a multiple of `orderOf σ`. Let `a = n * (orderOf σ)`.
  obtain ⟨n, hn⟩ := Nat.dvd_iff_mod_eq_zero.2 h
  rw [hn]
  revert a
  -- Induction on `n` (the multiple).
  induction n with
  | zero => simp
  | succ n ih =>
    intro a _ _
    -- Split the product: $\prod_{i=0}^{(n+1)m-1} f(i) = (\prod_{i=0}^{nm-1} f(i)) \cdot (\prod_{i=nm}^{(n+1)m-1} f(i))$, where $m = \operatorname{orderOf}(\sigma)$.
    rw [Nat.mul_succ, prod_range_add, ih (Nat.mul_mod_right (orderOf σ) n) rfl, one_mul]
    -- The first part is 1 by `ih`. The second part is $\prod_{j=0}^{m-1} \sigma^{nm+j}(\eta)$.
    -- Since $\sigma^m = id$, $\sigma^{nm} = ( \sigma^m )^n = id^n = id$.
    -- So the second part is $\prod_{j=0}^{m-1} \sigma^j(\eta) = N_{L/K}(\eta)$.
    simp only [pow_add, pow_mul, pow_orderOf_eq_one, one_pow, one_mul]
    -- We know $N_{L/K}(\eta) = 1$ by `hη`.
    have := Algebra.norm_eq_prod_automorphisms K η.1
    simp only [hη, map_one] at this
    convert this.symm -- Show $\prod_{j=0}^{m-1} \sigma^j(\eta)$ equals the norm definition.
    -- Bijection to show that $\{\sigma^i\}_{i=0}^{m-1}$ covers all automorphisms in $G = \langle\sigma\rangle$.
    refine prod_bij (fun n (_ : n ∈ range (orderOf σ)) ↦ σ ^ n) (by simp)
      (fun a ha b hb hab ↦ ?_) (fun τ _ ↦ ?_) (fun _ _ ↦ by rfl)
    -- Injectivity: if $\sigma^a = \sigma^b$ for $a,b \in [0, m-1)$, then $a=b$.
    · rwa [pow_inj_mod, Nat.mod_eq_of_lt (mem_range.1 ha),
        Nat.mod_eq_of_lt (mem_range.1 hb)] at hab
    -- Surjectivity: any $\tau \in G$ is $\sigma^k$ for some $k \in [0, m-1)$.
    · refine ⟨(finEquivZPowers _ (isOfFinOrder_of_finite σ)).symm ⟨τ, hσ τ⟩, by simp, ?_⟩
      -- This uses `φ` to find the exponent.
      have := Equiv.symm_apply_apply (finEquivZPowers _
        (isOfFinOrder_of_finite σ)).symm ⟨τ, hσ τ⟩
      simp only [SetLike.coe_sort_coe, Equiv.symm_symm, ← Subtype.coe_inj] at this ⊢
      rw [← this]
      simp only [SetLike.coe_sort_coe, Subtype.coe_eta, Equiv.symm_apply_apply]
      rfl

include hσ hη in
/--If $a \equiv b \pmod{\operatorname{orderOf}(\sigma)}$, then $\prod_{i=0}^{a-1} \sigma^i(\eta) =
  \prod_{i=0}^{b-1} \sigma^i(\eta)$.-/
lemma aux2 [IsGalois K L] {a b : ℕ} (h : a % orderOf σ = b % orderOf σ) :
    ∏ i ∈ range a, (σ ^ i) η = ∏ i ∈ range b, (σ ^ i) η := by
  -- Assume $b \le a$ without loss of generality.
  wlog hab : b ≤ a generalizing a b
  · exact (this h.symm (not_le.1 hab).le).symm
  -- Since $a \equiv b \pmod n$, $a-b$ is a multiple of $n = \operatorname{orderOf}(\sigma)$.
  obtain ⟨c, hc⟩ := Nat.dvd_iff_mod_eq_zero.2 (Nat.sub_mod_eq_zero_of_mod_eq h)
  rw [Nat.sub_eq_iff_eq_add hab] at hc
  -- $\prod_{k=0}^{b+cn-1} f(k) = (\prod_{k=0}^{b-1} f(k)) \cdot (\prod_{j=0}^{cn-1} f(b+j))$.
  rw [hc, prod_range_add, aux1 hσ hη (Nat.mul_mod_right (orderOf σ) c), one_mul]
  -- The second factor is $\prod_{j=0}^{cn-1} \sigma^{b+j}(\eta) = \sigma^b(\prod_{j=0}^{cn-1} \sigma^j(\eta))$.
  simp [pow_add, pow_mul, pow_orderOf_eq_one]

/--Shows that `cocycle(σ) = η`.
  cocycle(σ) = cocycle(σ^1) = \prod_{i=0}^{1-1} \sigma^i(\eta) = \sigma^0(\eta) = \eta$.-/
lemma cocycle_spec (hone : orderOf σ ≠ 1) : (cocycle hσ η) σ = η := by
  -- Ensure `orderOf σ` is not zero, which is true if it's not one for a finite order element.
  haveI nezero : NeZero (orderOf σ) :=
    ⟨fun hzero ↦ orderOf_eq_zero_iff.1 hzero (isOfFinOrder_of_finite σ)⟩
  -- Rewrite σ as σ¹ to make exponent explicit.
  conv =>
    enter [1, 3]
    rw [← pow_one σ]
  -- $1 \pmod{\operatorname{orderOf}(\sigma)} = 1$, since $\operatorname{orderOf}(\sigma) \ge 2$.
  have : 1 % orderOf σ = 1 := by
    suffices (orderOf σ).pred.pred + 2 = orderOf σ by
      rw [← this]
      exact Nat.one_mod _
    rw [← Nat.succ_eq_add_one, ← Nat.succ_eq_add_one, Nat.succ_pred, Nat.succ_pred nezero.1]
    intro h
    rw [show 0 = Nat.pred 1 by rfl] at h
    apply hone
    exact Nat.pred_inj (Nat.pos_of_ne_zero nezero.1) zero_lt_one h
  -- Use `hφ` to evaluate `φ(σ^1)`.
  have horder :=  hφ hσ 1
  simp only [SetLike.coe_sort_coe, pow_one] at horder
  simp [cocycle, SetLike.coe_sort_coe, horder, this, range_one, prod_singleton, pow_zero]
  rfl

include hη in
/--Proves the 1-cocycle condition: $c(\alpha\beta) = \alpha(c(\beta)) \cdot c(\alpha)$.-/
lemma is_cocycle_aux [IsGalois K L] : ∀ (α β : (L ≃ₐ[K] L)), (cocycle hσ η) (α * β) =
    α ((cocycle hσ η) β) * (cocycle hσ η) α := by
  intro α β
  -- Since $G = \langle\sigma\rangle$, $\alpha = \sigma^a$ and $\beta = \sigma^b$ for some $a,b$.
  have hσmon : ∀ x, x ∈ powers σ := by simpa [← mem_powers_iff_mem_zpowers] using hσ
  obtain ⟨a, ha⟩ := (mem_powers_iff _ _).1 (hσmon α)
  obtain ⟨b, hb⟩ := (mem_powers_iff _ _).1 (hσmon β)
  -- Substitute $\alpha = \sigma^a, \beta = \sigma^b$. So $\alpha\beta = \sigma^{a+b}$.
  rw [← ha, ← hb, ← pow_add]
  -- Let $n = \operatorname{orderOf}(\sigma)$.
  -- `Hab` is $(a+b) \pmod n$. `Ha` is $a \pmod n$. `Hb` is $b \pmod n$.
  have Hab := hφ hσ (a + b)
  have Ha := hφ hσ a
  have Hb := hφ hσ b
  -- Expand definitions of cocycle.
  -- LHS: $c(\sigma^{a+b}) = \prod_{i=0}^{(a+b)\%n - 1} \sigma^i(\eta)$.
  -- RHS: $\sigma^a(c(\sigma^b)) \cdot c(\sigma^a) = \sigma^a(\prod_{j=0}^{b\%n - 1} \sigma^j(\eta)) \cdot (\prod_{k=0}^{a\%n - 1} \sigma^k(\eta))$
  -- $= (\prod_{j=0}^{b\%n - 1} \sigma^{a+j}(\eta)) \cdot (\prod_{k=0}^{a\%n - 1} \sigma^k(\eta))$.
  simp only [SetLike.coe_sort_coe, Nat.cast_add, Fin.ext_iff, Fin.mod_val, Fin.coe_ofNat_eq_mod,
    Nat.mod_self, Nat.mod_zero, cocycle, Units.coe_prod, Units.coe_map, MonoidHom.coe_coe,
    map_prod] at Hab Ha Hb ⊢
  rw [Hab, Ha, Hb, mul_comm]
  -- In $\sigma^{a+j}(\eta)$, replace $\sigma^a$ with $\sigma^{a\%n}$ because they are the same automorphism.
  have H : ∀ n, σ ^ (a + n) = σ ^ (a % orderOf σ + n) := fun n ↦ by simp [pow_inj_mod]
  conv =>
    enter [2, 2, 2, x]
    rw [← AlgEquiv.mul_apply, ← pow_add, H]
  -- RHS is now $(\prod_{k=0}^{a\%n-1} \sigma^k(\eta)) \cdot (\prod_{j=0}^{b\%n-1} \sigma^{(a\%n)+j}(\eta))$.
  -- This product is $\prod_{l=0}^{a\%n + b\%n - 1} \sigma^l(\eta)$.
  rw [← prod_range_add (fun (n : ℕ) ↦ (σ ^ n) η) (a % orderOf σ) (b % orderOf σ)]
  -- We need to show $\prod_{l=0}^{(a\%n+b\%n)-1} \sigma^l(\eta) = \prod_{i=0}^{(a+b)\%n - 1} \sigma^i(\eta)$.
  -- This holds by `aux2` because $(a\%n + b\%n) \pmod n = (a+b) \pmod n$.
  simpa using aux2 hσ hη (by simp [Nat.add_mod_mod])

include hη in
/--Formal statement that `cocycle hσ η` is a multiplicative 1-cocycle.-/
lemma is_cocycle [IsGalois K L] : IsMulOneCocycle (cocycle hσ η) := by
  intro α β
  -- This follows directly from `is_cocycle_aux`.
  simp [← Units.eq_iff, is_cocycle_aux hσ hη α β]

include hη hσ in
/-- Theorem `Hilbert90`: If $N_{L/K}(\eta)=1$, then $\eta = \varepsilon / \sigma(\varepsilon)$ for some $\varepsilon \in L$.-/
lemma Hilbert90 [IsGalois K L] : ∃ ε : L, η = ε / σ ε := by
  -- Case 1: $\operatorname{orderOf}(\sigma) = 1$.
  by_cases hone : orderOf σ = 1
  · -- If $\operatorname{orderOf}(\sigma)=1$, then $\sigma = \operatorname{id}$.
    -- The condition $h\sigma$ (Galois group is generated by $\sigma$) implies $G = \{\operatorname{id}\}$.
    -- Then $[L:K]=|G|=1$, so $L=K$.
    suffices Module.finrank K L = 1 by
      -- If $L=K$, then $\eta \in K$. $N_{L/K}(\eta) = \eta$. So $h\eta$ implies $\eta=1$.
      obtain ⟨a, ha⟩ := mem_span_singleton.1 <| (eq_top_iff'.1 <|
        (finrank_eq_one_iff_of_nonzero _ one_ne_zero).1 this) η
      -- $\eta = \operatorname{algebraMap K L}(a)$.
      rw [← Algebra.algebraMap_eq_smul_one] at ha
      -- $N(\eta) = a$. So $a=1$. Thus $\eta=1$.
      rw [← ha, Algebra.norm_algebraMap, this, pow_one] at hη
      -- We need $\eta = \varepsilon / \sigma(\varepsilon)$. This is $1 = \varepsilon / \operatorname{id}(\varepsilon) = \varepsilon/\varepsilon = 1$.
      -- Choose $\varepsilon=1$. Then $1 = 1/\sigma(1) = 1/1 = 1$.
      exact ⟨1, by simp [← ha, hη]⟩
    -- Prove $[L:K]=1$.
    rw [← IsGalois.card_aut_eq_finrank, Fintype.card_eq_one_iff]
    refine ⟨σ, fun τ ↦ ?_⟩
    simp only [orderOf_eq_one_iff.1 hone, Subgroup.zpowers_one_eq_bot, Subgroup.mem_bot] at hσ
    rw [orderOf_eq_one_iff.1 hone, hσ τ]
  -- Case 2: $\operatorname{orderOf}(\sigma) \
eq 1$.
  -- Since `cocycle hσ η` is a 1-cocycle, it is a 1-coboundary.
  -- So, there exists $\varepsilon \in L^\times$ such that for all $\tau \in G$, $c(\tau) = \tau(\varepsilon) \cdot \varepsilon^{-1}$.
  obtain ⟨ε, hε⟩ := isMulOneCoboundary_of_isMulOneCocycle_of_aut_to_units _ (is_cocycle hσ hη)
  -- We want to show $\eta = \beta / \sigma(\beta)$ for some $\beta \in L$.
  use ε⁻¹
  simp only [map_inv₀, div_inv_eq_mul]
  specialize hε σ
  nth_rw 2 [← inv_inv ε] at hε
  rw [div_inv_eq_mul, cocycle_spec hσ hone, mul_inv_eq_iff_eq_mul, mul_comm,
    ← Units.eq_iff] at hε
  simp only [AlgEquiv.smul_units_def, Units.coe_map, MonoidHom.coe_coe, Units.val_mul] at hε
  symm
  rw [inv_mul_eq_iff_eq_mul₀ ε.ne_zero, hε]

end Hilbert

/-- Theorem `Hilbert90'`: The main theorem for $\eta \in L$ (not necessarily $L^\times$).-/
theorem Hilbert90' {K L : Type*} [Field K] [Field L] [Algebra K L]
    [FiniteDimensional K L] {σ : L ≃ₐ[K] L} (hσ : ∀ (x : L ≃ₐ[K] L), x ∈ Subgroup.zpowers σ) {η : L}
    (hη : (Algebra.norm K) η = 1) [IsGalois K L] : ∃ ε, ε ≠ 0 ∧ η = ε / σ ε := by
  -- If $N(\eta)=1$ and $\eta=0$, then $N(0)=1 \implies 0=1$, a contradiction.
  -- So $\eta \
eq 0$, which means $\eta$ is a unit.
  by_cases hunit : IsUnit η
  -- Case 1: $\eta$ is a unit.
  · obtain ⟨ε, hε⟩ := Hilbert.Hilbert90 hσ (η := hunit.unit) hη
    by_cases hzero : ε = 0
    · rw [hzero] at hε
      simp only [IsUnit.unit_spec, map_zero, div_zero] at hε
      exact False.elim <| (isUnit_iff_ne_zero.1 hunit) hε
      -- Apply the previous version of Hilbert's Theorem 90 for units.
    · exact ⟨ε, ⟨hzero, hε⟩⟩
  -- Case 2: $\eta$ is not a unit. Since $L$ is a field, this means $\eta=0$.
  · simp only [isUnit_iff_ne_zero, ne_eq, not_not] at hunit
    -- Substitute $\eta=0$ into $N(\eta)=1$, so $N(0)=1$.
    rw [hunit] at hη
    -- $N(0)=0$. So $0=1$, which is false. This case is impossible.
    simp only [Algebra.norm_zero, zero_ne_one] at hη

end UnexploredExercise_1432


/-! Informal proof:
ESS","data":{"total":1,"list":[{"created":"2025-05-07 11:05:06","updated":"2025-05-07 17:19:20","id":8103,"questionId":3072,"taskId":2593,"jobId":6268,"userId":211,"judgeUserId":351,"answer":{"informalProof":null,"formalProof":"import Mathlib
namespace UnexploredExercise_1432
namespace Hilbert
open scoped nonZeroDivisors
open FiniteDimensional Finset BigOperators Submodule groupCohomology Submonoid
/-
We will now prove Hilbert's Theorem 90 : If $E / F$ is a cyclic extension with $[E: F]=n$
and Galois group $G=\left\{1, \sigma, \ldots, \sigma^{n-1}\right\}$ generated by $\sigma$,
and $x \in E$, then $N(x)=1$ only if there exists $y \in E$ such that $x=y / \sigma(y)$;
-/
-- K and L are fields, L is a finite dimensional K-algebra.
variable {K L : Type*} [Field K] [Field L] [Algebra K L] [FiniteDimensional K L]
-- σ is a K-automorphism of L.
variable {σ : L ≃ₐ[K] L}
-- hσ states that the Galois group is cyclic, generated by σ.
-- More precisely, every element in the Galois group is a power of σ.
(hσ : ∀ x, x ∈ Subgroup.zpowers σ)
-- η is an element in Lˣ (the multiplicative group of units of L).
variable {η : Lˣ}
-- hη is the hypothesis that the norm of η (from L to K) is 1.
(hη : Algebra.norm K η.1 = 1)
set_option quotPrecheck false
/-- φ maps an element τ = σⁿ from the cyclic group generated by σ to n mod (order of σ).
  It's the inverse of the canonical isomorphism from Fin (orderOf σ) to
  the subgroup generated by σ.-/
local notation \"φ\" => (finEquivZPowers _ (isOfFinOrder_of_finite σ)).symm
/--confirms that φ maps σⁿ to n mod (orderOf σ).-/
lemma hφ : ∀ (n : ℕ), φ ⟨σ ^ n, hσ _⟩ = n % (orderOf σ) := fun n ↦ by
  simpa [Fin.ext_iff] using finEquivZPowers_symm_apply _ (isOfFinOrder_of_finite σ) n
variable (η) in
/-- Definition of the 1-cocycle for Hilbert's Theorem 90.
  For τ = σᵏ, cocycle(τ) = η ⋅ σ(η) ⋅ σ²(η) ⋅ ... ⋅ σᵏ⁻¹(η).-/
noncomputable
def cocycle : (L ≃ₐ[K] L) → Lˣ := fun τ ↦ ∏ i ∈ range (φ ⟨τ, hσ τ⟩), Units.map (σ ^ i) η
include hσ hη in
/--If `a` is a multiple of the order of σ (denoted `n`),
  then the product $\prod_{i=0}^{a-1} \sigma^i(\eta) = 1$.
  This is because $\prod_{i=0}^{a-1} \sigma^i(\eta) = (N_{L/K}(\eta))^{a/n} = 1^{a/n} = 1$.-/
lemma aux1 [IsGalois K L] {a: ℕ} (h : a % orderOf σ = 0) : ∏ i ∈ range a, (σ ^ i) η = 1 := by
  -- `h` implies `a` is a multiple of `orderOf σ`. Let `a = n * (orderOf σ)`.
  obtain ⟨n, hn⟩ := Nat.dvd_iff_mod_eq_zero.2 h
  rw [hn]
  revert a
  -- Induction on `n` (the multiple).
  induction n with
  | zero => simp
  | succ n ih =>
    intro a _ _
    -- Split the product: $\prod_{i=0}^{(n+1)m-1} f(i) = (\prod_{i=0}^{nm-1} f(i)) \cdot (\prod_{i=nm}^{(n+1)m-1} f(i))$, where $m = \operatorname{orderOf}(\sigma)$.
    rw [Nat.mul_succ, prod_range_add, ih (Nat.mul_mod_right (orderOf σ) n) rfl, one_mul]
    -- The first part is 1 by `ih`. The second part is $\prod_{j=0}^{m-1} \sigma^{nm+j}(\eta)$.
    -- Since $\sigma^m = id$, $\sigma^{nm} = ( \sigma^m )^n = id^n = id$.
    -- So the second part is $\prod_{j=0}^{m-1} \sigma^j(\eta) = N_{L/K}(\eta)$.
    simp only [pow_add, pow_mul, pow_orderOf_eq_one, one_pow, one_mul]
    -- We know $N_{L/K}(\eta) = 1$ by `hη`.
    have := Algebra.norm_eq_prod_automorphisms K η.1
    simp only [hη, map_one] at this
    convert this.symm -- Show $\prod_{j=0}^{m-1} \sigma^j(\eta)$ equals the norm definition.
    -- Bijection to show that $\{\sigma^i\}_{i=0}^{m-1}$ covers all automorphisms in $G = \langle\sigma\rangle$.
    refine prod_bij (fun n (_ : n ∈ range (orderOf σ)) ↦ σ ^ n) (by simp)
      (fun a ha b hb hab ↦ ?_) (fun τ _ ↦ ?_) (fun _ _ ↦ by rfl)
    -- Injectivity: if $\sigma^a = \sigma^b$ for $a,b \in [0, m-1)$, then $a=b$.
    · rwa [pow_inj_mod, Nat.mod_eq_of_lt (mem_range.1 ha),
        Nat.mod_eq_of_lt (mem_range.1 hb)] at hab
    -- Surjectivity: any $\tau \in G$ is $\sigma^k$ for some $k \in [0, m-1)$.
    · refine ⟨(finEquivZPowers _ (isOfFinOrder_of_finite σ)).symm ⟨τ, hσ τ⟩, by simp, ?_⟩
      -- This uses `φ` to find the exponent.
      have := Equiv.symm_apply_apply (finEquivZPowers _
        (isOfFinOrder_of_finite σ)).symm ⟨τ, hσ τ⟩
      simp only [SetLike.coe_sort_coe, Equiv.symm_symm, ← Subtype.coe_inj] at this ⊢
      rw [← this]
      simp only [SetLike.coe_sort_coe, Subtype.coe_eta, Equiv.symm_apply_apply]
      rfl
include hσ hη in
/--If $a \equiv b \pmod{\operatorname{orderOf}(\sigma)}$, then $\prod_{i=0}^{a-1} \sigma^i(\eta) =
  \prod_{i=0}^{b-1} \sigma^i(\eta)$.-/
lemma aux2 [IsGalois K L] {a b : ℕ} (h : a % orderOf σ = b % orderOf σ) :
    ∏ i ∈ range a, (σ ^ i) η = ∏ i ∈ range b, (σ ^ i) η := by
  -- Assume $b \le a$ without loss of generality.
  wlog hab : b ≤ a generalizing a b
  · exact (this h.symm (not_le.1 hab).le).symm
  -- Since $a \equiv b \pmod n$, $a-b$ is a multiple of $n = \operatorname{orderOf}(\sigma)$.
  obtain ⟨c, hc⟩ := Nat.dvd_iff_mod_eq_zero.2 (Nat.sub_mod_eq_zero_of_mod_eq h)
  rw [Nat.sub_eq_iff_eq_add hab] at hc
  -- $\prod_{k=0}^{b+cn-1} f(k) = (\prod_{k=0}^{b-1} f(k)) \cdot (\prod_{j=0}^{cn-1} f(b+j))$.
  rw [hc, prod_range_add, aux1 hσ hη (Nat.mul_mod_right (orderOf σ) c), one_mul]
  -- The second factor is $\prod_{j=0}^{cn-1} \sigma^{b+j}(\eta) = \sigma^b(\prod_{j=0}^{cn-1} \sigma^j(\eta))$.
  simp [pow_add, pow_mul, pow_orderOf_eq_one]
/--Shows that `cocycle(σ) = η`.
  cocycle(σ) = cocycle(σ^1) = \prod_{i=0}^{1-1} \sigma^i(\eta) = \sigma^0(\eta) = \eta$.-/
lemma cocycle_spec (hone : orderOf σ ≠ 1) : (cocycle hσ η) σ = η := by
  -- Ensure `orderOf σ` is not zero, which is true if it's not one for a finite order element.
  haveI nezero : NeZero (orderOf σ) :=
    ⟨fun hzero ↦ orderOf_eq_zero_iff.1 hzero (isOfFinOrder_of_finite σ)⟩
  -- Rewrite σ as σ¹ to make exponent explicit.
  conv =>
    enter [1, 3]
    rw [← pow_one σ]
  -- $1 \pmod{\operatorname{orderOf}(\sigma)} = 1$, since $\operatorname{orderOf}(\sigma) \ge 2$.
  have : 1 % orderOf σ = 1 := by
    suffices (orderOf σ).pred.pred + 2 = orderOf σ by
      rw [← this]
      exact Nat.one_mod _
    rw [← Nat.succ_eq_add_one, ← Nat.succ_eq_add_one, Nat.succ_pred, Nat.succ_pred nezero.1]
    intro h
    rw [show 0 = Nat.pred 1 by rfl] at h
    apply hone
    exact Nat.pred_inj (Nat.pos_of_ne_zero nezero.1) zero_lt_one h
  -- Use `hφ` to evaluate `φ(σ^1)`.
  have horder :=  hφ hσ 1
  simp only [SetLike.coe_sort_coe, pow_one] at horder
  simp [cocycle, SetLike.coe_sort_coe, horder, this, range_one, prod_singleton, pow_zero]
  rfl
include hη in
/--Proves the 1-cocycle condition: $c(\alpha\beta) = \alpha(c(\beta)) \cdot c(\alpha)$.-/
lemma is_cocycle_aux [IsGalois K L] : ∀ (α β : (L ≃ₐ[K] L)), (cocycle hσ η) (α * β) =
    α ((cocycle hσ η) β) * (cocycle hσ η) α := by
  intro α β
  -- Since $G = \langle\sigma\rangle$, $\alpha = \sigma^a$ and $\beta = \sigma^b$ for some $a,b$.
  have hσmon : ∀ x, x ∈ powers σ := by simpa [← mem_powers_iff_mem_zpowers] using hσ
  obtain ⟨a, ha⟩ := (mem_powers_iff _ _).1 (hσmon α)
  obtain ⟨b, hb⟩ := (mem_powers_iff _ _).1 (hσmon β)
  -- Substitute $\alpha = \sigma^a, \beta = \sigma^b$. So $\alpha\beta = \sigma^{a+b}$.
  rw [← ha, ← hb, ← pow_add]
  -- Let $n = \operatorname{orderOf}(\sigma)$.
  -- `Hab` is $(a+b) \pmod n$. `Ha` is $a \pmod n$. `Hb` is $b \pmod n$.
  have Hab := hφ hσ (a + b)
  have Ha := hφ hσ a
  have Hb := hφ hσ b
  -- Expand definitions of cocycle.
  -- LHS: $c(\sigma^{a+b}) = \prod_{i=0}^{(a+b)\%n - 1} \sigma^i(\eta)$.
  -- RHS: $\sigma^a(c(\sigma^b)) \cdot c(\sigma^a) = \sigma^a(\prod_{j=0}^{b\%n - 1} \sigma^j(\eta)) \cdot (\prod_{k=0}^{a\%n - 1} \sigma^k(\eta))$
  -- $= (\prod_{j=0}^{b\%n - 1} \sigma^{a+j}(\eta)) \cdot (\prod_{k=0}^{a\%n - 1} \sigma^k(\eta))$.
  simp only [SetLike.coe_sort_coe, Nat.cast_add, Fin.ext_iff, Fin.mod_val, Fin.coe_ofNat_eq_mod,
    Nat.mod_self, Nat.mod_zero, cocycle, Units.coe_prod, Units.coe_map, MonoidHom.coe_coe,
    map_prod] at Hab Ha Hb ⊢
  rw [Hab, Ha, Hb, mul_comm]
  -- In $\sigma^{a+j}(\eta)$, replace $\sigma^a$ with $\sigma^{a\%n}$ because they are the same automorphism.
  have H : ∀ n, σ ^ (a + n) = σ ^ (a % orderOf σ + n) := fun n ↦ by simp [pow_inj_mod]
  conv =>
    enter [2, 2, 2, x]
    rw [← AlgEquiv.mul_apply, ← pow_add, H]
  -- RHS is now $(\prod_{k=0}^{a\%n-1} \sigma^k(\eta)) \cdot (\prod_{j=0}^{b\%n-1} \sigma^{(a\%n)+j}(\eta))$.
  -- This product is $\prod_{l=0}^{a\%n + b\%n - 1} \sigma^l(\eta)$.
  rw [← prod_range_add (fun (n : ℕ) ↦ (σ ^ n) η) (a % orderOf σ) (b % orderOf σ)]
  -- We need to show $\prod_{l=0}^{(a\%n+b\%n)-1} \sigma^l(\eta) = \prod_{i=0}^{(a+b)\%n - 1} \sigma^i(\eta)$.
  -- This holds by `aux2` because $(a\%n + b\%n) \pmod n = (a+b) \pmod n$.
  simpa using aux2 hσ hη (by simp [Nat.add_mod_mod])
include hη in
/--Formal statement that `cocycle hσ η` is a multiplicative 1-cocycle.-/
lemma is_cocycle [IsGalois K L] : IsMulOneCocycle (cocycle hσ η) := by
  intro α β
  -- This follows directly from `is_cocycle_aux`.
  simp [← Units.eq_iff, is_cocycle_aux hσ hη α β]
include hη hσ in
/-- Theorem `Hilbert90`: If $N_{L/K}(\eta)=1$, then $\eta = \varepsilon / \sigma(\varepsilon)$ for some $\varepsilon \in L$.-/
lemma Hilbert90 [IsGalois K L] : ∃ ε : L, η = ε / σ ε := by
  -- Case 1: $\operatorname{orderOf}(\sigma) = 1$.
  by_cases hone : orderOf σ = 1
  · -- If $\operatorname{orderOf}(\sigma)=1$, then $\sigma = \operatorname{id}$.
    -- The condition $h\sigma$ (Galois group is generated by $\sigma$) implies $G = \{\operatorname{id}\}$.
    -- Then $[L:K]=|G|=1$, so $L=K$.
    suffices Module.finrank K L = 1 by
      -- If $L=K$, then $\eta \in K$. $N_{L/K}(\eta) = \eta$. So $h\eta$ implies $\eta=1$.
      obtain ⟨a, ha⟩ := mem_span_singleton.1 <| (eq_top_iff'.1 <|
        (finrank_eq_one_iff_of_nonzero _ one_ne_zero).1 this) η
      -- $\eta = \operatorname{algebraMap K L}(a)$.
      rw [← Algebra.algebraMap_eq_smul_one] at ha
      -- $N(\eta) = a$. So $a=1$. Thus $\eta=1$.
      rw [← ha, Algebra.norm_algebraMap, this, pow_one] at hη
      -- We need $\eta = \varepsilon / \sigma(\varepsilon)$. This is $1 = \varepsilon / \operatorname{id}(\varepsilon) = \varepsilon/\varepsilon = 1$.
      -- Choose $\varepsilon=1$. Then $1 = 1/\sigma(1) = 1/1 = 1$.
      exact ⟨1, by simp [← ha, hη]⟩
    -- Prove $[L:K]=1$.
    rw [← IsGalois.card_aut_eq_finrank, Fintype.card_eq_one_iff]
    refine ⟨σ, fun τ ↦ ?_⟩
    simp only [orderOf_eq_one_iff.1 hone, Subgroup.zpowers_one_eq_bot, Subgroup.mem_bot] at hσ
    rw [orderOf_eq_one_iff.1 hone, hσ τ]
  -- Case 2: $\operatorname{orderOf}(\sigma) \
eq 1$.
  -- Since `cocycle hσ η` is a 1-cocycle, it is a 1-coboundary.
  -- So, there exists $\varepsilon \in L^\times$ such that for all $\tau \in G$, $c(\tau) = \tau(\varepsilon) \cdot \varepsilon^{-1}$.
  obtain ⟨ε, hε⟩ := isMulOneCoboundary_of_isMulOneCocycle_of_aut_to_units _ (is_cocycle hσ hη)
  -- We want to show $\eta = \beta / \sigma(\beta)$ for some $\beta \in L$.
  use ε⁻¹
  simp only [map_inv₀, div_inv_eq_mul]
  specialize hε σ
  nth_rw 2 [← inv_inv ε] at hε
  rw [div_inv_eq_mul, cocycle_spec hσ hone, mul_inv_eq_iff_eq_mul, mul_comm,
    ← Units.eq_iff] at hε
  simp only [AlgEquiv.smul_units_def, Units.coe_map, MonoidHom.coe_coe, Units.val_mul] at hε
  symm
  rw [inv_mul_eq_iff_eq_mul₀ ε.ne_zero, hε]
end Hilbert
/-- Theorem `Hilbert90'`: The main theorem for $\eta \in L$ (not necessarily $L^\times$).-/
theorem Hilbert90' {K L : Type*} [Field K] [Field L] [Algebra K L]
    [FiniteDimensional K L] {σ : L ≃ₐ[K] L} (hσ : ∀ (x : L ≃ₐ[K] L), x ∈ Subgroup.zpowers σ) {η : L}
    (hη : (Algebra.norm K) η = 1) [IsGalois K L] : ∃ ε, ε ≠ 0 ∧ η = ε / σ ε := by
  -- If $N(\eta)=1$ and $\eta=0$, then $N(0)=1 \implies 0=1$, a contradiction.
  -- So $\eta \
eq 0$, which means $\eta$ is a unit.
  by_cases hunit : IsUnit η
  -- Case 1: $\eta$ is a unit.
  · obtain ⟨ε, hε⟩ := Hilbert.Hilbert90 hσ (η := hunit.unit) hη
    by_cases hzero : ε = 0
    · rw [hzero] at hε
      simp only [IsUnit.unit_spec, map_zero, div_zero] at hε
      exact False.elim <| (isUnit_iff_ne_zero.1 hunit) hε
      -- Apply the previous version of Hilbert's Theorem 90 for units.
    · exact ⟨ε, ⟨hzero, hε⟩⟩
  -- Case 2: $\eta$ is not a unit. Since $L$ is a field, this means $\eta=0$.
  · simp only [isUnit_iff_ne_zero, ne_eq, not_not] at hunit
    -- Substitute $\eta=0$ into $N(\eta)=1$, so $N(0)=1$.
    rw [hunit] at hη
    -- $N(0)=0$. So $0=1$, which is false. This case is impossible.
    simp only [Algebra.norm_zero, zero_ne_one] at hη
end UnexploredExercise_1432
","formalStatement":null,"suggestion":null,"comment":"<h1>申请将题目中的“Galbis group of order nn”更换为finite dimensional，因为</h1><h1><a href=\"https://math.stackexchange.com/questions/4178253/finite-galois-group-of-galois-extension-implies-that-the-extension-is-finite\" target=\"\">Finite Galois group of Galois extension implies that the extension is finite</a>，the Galois group of a finite Galois extension is finite</h1><h1>这两个条件是等价的，但是库里似乎没有有限Galois群推有限维，而大部分定理都依赖有限维</h1><p>事实上， <a href=\"https://math.uchicago.edu/~may/REU2013/REUPapers/Lingle.pdf\" target=\"_blank\">https://math.uchicago.edu/~may/REU2013/REUPapers/Lingle.pdf</a> 中的Hilbert90（第23页定理3.17）就是有限维的</p>"},"judgement":{"result":"done","score":5,"suggestion":"<p>证明通顺，逻辑严密，完全正确，再接再厉！</p>","feedbackAction":"done","comment":null},"stepInfo":[{"name":"stepA","value":"Done"},{"name":"stepB","value":"Done"},{"name":"stepC","value":"Done"}],"userInfo":{"id":211,"username":"Misaka","nickname":"郑欢誉","avatar":"//p1-arco.byteimg.com/tos-cn-i-uwbnlip3yd/a8c8cdb109cb051163646151a4a5083b.png~tplv-uwbnlip3yd-webp.webp","email":"suzuka@misaka-yu.com"},"judgeUserInfo":{"id":351,"username":"Yuxintao","nickname":"Yuxintao","avatar":"//p1-arco.byteimg.com/tos-cn-i-uwbnlip3yd/a8c8cdb109cb051163646151a4a5083b.png~tplv-uwbnlip3yd-webp.webp","email":"1472388812@qq.com"}}]},"errorCode":0
-/
